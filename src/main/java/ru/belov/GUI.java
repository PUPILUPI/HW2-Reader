/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package ru.belov;

import org.apache.poi.openxml4j.exceptions.InvalidFormatException;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.autoconfigure.SpringBootApplication;
import org.springframework.boot.builder.SpringApplicationBuilder;
import ru.belov.db.entity.Company;
import ru.belov.db.entity.Country;
import ru.belov.db.entity.Site;
import ru.belov.db.sql.DataBase;
import ru.belov.exceptions.ReactorLibraryException;
import ru.belov.importers.ImporterBuilder;
import ru.belov.reactors.ReactorLibrary;
import ru.belov.readers.ExcelReader;
import ru.belov.service.ComputingService;

import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.awt.*;
import java.io.IOException;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;
import java.util.stream.Collectors;

@SpringBootApplication
public class GUI extends javax.swing.JFrame {
    @Autowired
    private ImporterBuilder importerBuilder;
    @Autowired
    private ComputingService service;
    private boolean loadDb = false;
    private boolean loadLibrary = false;
    private ReactorLibrary library;
    private String fileName = null;


    public GUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        consumptionByCountry = new javax.swing.JButton();
        consumptionByCompany = new javax.swing.JButton();
        consumptionByRegion = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        chooseFile = new javax.swing.JButton();
        loadDB = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
                new Object[][]{
                },
                new String[]{
                }
        ));
        jScrollPane1.setViewportView(jTable1);

        consumptionByCountry.setText("Странам");
        consumptionByCountry.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                consumptionByCountryActionPerformed(evt);
            }
        });

        consumptionByCompany.setText("Компаниям");
        consumptionByCompany.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                consumptionByCompanyActionPerformed(evt);
            }
        });

        consumptionByRegion.setText("Регионам");
        consumptionByRegion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                consumptionByRegionActionPerformed(evt);
            }
        });

        jLabel1.setText("Рассчитать суммарное потребление топлива по:");

        chooseFile.setText("выберите файл");
        chooseFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chooseFileActionPerformed(evt);
            }
        });

        loadDB.setText("Загрузить в бд");
        loadDB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loadDBActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addContainerGap()
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(consumptionByRegion, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                        .addComponent(consumptionByCompany, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                        .addComponent(consumptionByCountry, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(chooseFile, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(loadDB, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 452, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                        .addComponent(chooseFile, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(loadDB, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGap(18, 18, 18)
                                                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(consumptionByCountry, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(consumptionByCompany, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(consumptionByRegion, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addContainerGap(7, Short.MAX_VALUE))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void consumptionByRegionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_consumptionByRegionActionPerformed
        if (!loadDb) {
            JOptionPane.showMessageDialog(null, "Вы еще не загрузили данные в БД");
            return;
        }
        try {
            DataBase db = new DataBase();
            db.calculateConsumption();
            ResultSet set = db.calculateConsumptionByRegion();
            List<String[]> out = new ArrayList<>();
            String[] row;
            int i = 0;
            while (set.next()) {
                i++;
                row = new String[2];
                row[0] = set.getString(1);
                row[1] = String.valueOf(set.getDouble(2));
                out.add(row);
            }
            DefaultTableModel model = new DefaultTableModel();
            model.addColumn("Регион");
            model.addColumn("Объем ежегодного потребления, т.");
            for (String[] string : out) {
                model.addRow(string);
            }
            jTable1.setModel(model);
        } catch (SQLException e) {
            throw new RuntimeException(e);
        }
    }//GEN-LAST:event_consumptionByRegionActionPerformed

    private void consumptionByCountryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_consumptionByCountryActionPerformed
        if (!loadDb) {
            JOptionPane.showMessageDialog(null, "Вы еще не загрузили данные в БД");
            return;
        }
        try {
            DataBase db = new DataBase();
            db.calculateConsumption();
            ResultSet set = db.calculateConsumptionByCountry();
            List<String[]> out = new ArrayList<>();
            String[] row;
            int i = 0;
            while (set.next()) {
                i++;
                row = new String[2];
                row[0] = set.getString(1);
                row[1] = String.valueOf(set.getDouble(2));
                out.add(row);
            }
            DefaultTableModel model = new DefaultTableModel();
            model.addColumn("Страна");
            model.addColumn("Объем ежегодного потребления, т.");
            for (String[] string : out) {
                model.addRow(string);
            }
            jTable1.setModel(model);
        } catch (SQLException e) {
            throw new RuntimeException(e);
        }
    }//GEN-LAST:event_consumptionByCountryActionPerformed

    private void consumptionByCompanyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_consumptionByCompanyActionPerformed
        if (!loadDb) {
            JOptionPane.showMessageDialog(null, "Вы еще не загрузили данные в БД");
            return;
        }
        try {
            DataBase db = new DataBase();
            db.calculateConsumption();
            ResultSet set = db.calculateConsumptionByCompany();
            List<String[]> out = new ArrayList<>();
            String[] row;
            int i = 0;
            while (set.next()) {
                i++;
                row = new String[2];
                row[0] = set.getString(1);
                row[1] = String.valueOf(set.getDouble(2));
                out.add(row);
            }
            DefaultTableModel model = new DefaultTableModel();
            model.addColumn("Компания");
            model.addColumn("Объем ежегодного потребления, т.");
            for (String[] string : out) {
                model.addRow(string);
            }
            jTable1.setModel(model);
        } catch (SQLException e) {
            throw new RuntimeException(e);
        }
    }//GEN-LAST:event_consumptionByCompanyActionPerformed

    private void chooseFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chooseFileActionPerformed
        JFileChooser fileChooser = new JFileChooser(System.getProperty("user.dir") + "\\resources");
        int ret = fileChooser.showDialog(null, "Choose file");
        if (ret != JFileChooser.APPROVE_OPTION) {
            return;
        }
        fileName = fileChooser.getSelectedFile().getAbsolutePath();
        library = new ReactorLibrary(fileName);
        try {
            library.setMap(importerBuilder.getData(fileName));
        } catch (IOException e) {
            JOptionPane.showMessageDialog(null, "Ошибка при чтении файла");
        } catch (ReactorLibraryException e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
        loadLibrary = true;
    }//GEN-LAST:event_chooseFileActionPerformed

    private void loadDBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loadDBActionPerformed
        if (!loadLibrary) {
            JOptionPane.showMessageDialog(null, "Вы еще не выбралии файл");
            return;
        }
        ExcelReader reader = new ExcelReader(System.getProperty("user.dir") + "\\resources\\ReactorData.xlsx");
        try {
            service.createRegions(reader.readRegions("regions"));
            Map<Long, Country> countries = service.createCountries(reader.readCountries("countries"))
                    .stream().collect(Collectors.toMap(Country::getId, it -> it));
            Map<Long, Company> companies = service.createCompanies(reader.readCompanies("companies", countries))
                    .stream().collect(Collectors.toMap(Company::getId, it -> it));
            Map<Long, Site> sites = service.createSites(reader.readSites("sites", countries, companies)).stream().collect(Collectors.toMap(Site::getId, it -> it));
            service.createUnits(reader.readUnits("units", library.getMap(), sites));
        } catch (IOException | InvalidFormatException e) {
            throw new RuntimeException(e);
        }
        loadDb = true;
    }//GEN-LAST:event_loadDBActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {
        var ctx = new SpringApplicationBuilder(GUI.class)
                .headless(false).run(args);

        EventQueue.invokeLater(() -> {
            var ex = ctx.getBean(GUI.class);
            ex.setVisible(true);
            var ib = ctx.getBean(ImporterBuilder.class);
            ex.importerBuilder = ib;
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton chooseFile;
    private javax.swing.JButton consumptionByCompany;
    private javax.swing.JButton consumptionByCountry;
    private javax.swing.JButton consumptionByRegion;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JButton loadDB;
    // End of variables declaration//GEN-END:variables
}
